import re

def check_password_security(password):
    criteria = {
        'length': len(password) >= 8,
        'has_number': bool(re.search(r'\d', password))
    }
    
    return criteria

def password_validator():
    print("=== VALIDADOR DE SENHA ===")
    print("Crit√©rios de seguran√ßa:")
    print("‚Ä¢ Pelo menos 8 caracteres")
    print("‚Ä¢ Pelo menos um n√∫mero")
    
    while True:
        password = input("\nDigite sua senha (ou 'sair' para encerrar): ")
        
        if password.lower() == 'sair':
            print("Validador encerrado!")
            break
        
        criteria = check_password_security(password)
        
        print(f"\n--- AN√ÅLISE DA SENHA ---")
        print(f"Senha: {'*' * len(password)}")
        print(f"Comprimento: {len(password)} caracteres")
        
        print("\nCrit√©rios atendidos:")
        print(f"‚úì Pelo menos 8 caracteres: {'SIM' if criteria['length'] else 'N√ÉO'}")
        print(f"‚úì Cont√©m pelo menos um n√∫mero: {'SIM' if criteria['has_number'] else 'N√ÉO'}")
        
        all_criteria_met = all(criteria.values())
        
        if all_criteria_met:
            print("\nüü¢ SENHA SEGURA! Todos os crit√©rios foram atendidos.")
        else:
            print("\nüî¥ SENHA INSEGURA! Alguns crit√©rios n√£o foram atendidos.")
            print("\nRecomenda√ß√µes:")
            if not criteria['length']:
                print("‚Ä¢ Aumente o comprimento da senha para pelo menos 8 caracteres")
            if not criteria['has_number']:
                print("‚Ä¢ Adicione pelo menos um n√∫mero √† senha")
        
        print("-" * 30)

if __name__ == "__main__":
    password_validator()